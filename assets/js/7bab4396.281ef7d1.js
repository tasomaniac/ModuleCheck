"use strict";(self.webpackChunkmodulecheck=self.webpackChunkmodulecheck||[]).push([[541],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return t?r.createElement(m,u(u({ref:n},c),{},{components:t})):r.createElement(m,u({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,u=new Array(o);u[0]=p;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,u[1]=l;for(var s=2;s<o;s++)u[s]=t[s];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},58215:function(e,n,t){var r=t(67294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return c}});var r=t(83117),a=t(67294),o=t(72389),u=t(24726),l=t(86010),i="tabItem_LplD";function s(e){var n,t,o,s=e.lazy,c=e.block,d=e.defaultValue,p=e.values,f=e.groupId,m=e.className,y=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:y.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,u.lx)(h,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===d?d:null!=(n=null!=d?d:null==(t=y.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=y[0])?void 0:o.props.value;if(null!==b&&!h.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,u.UB)(),k=g.tabGroupChoices,j=g.setTabGroupChoices,w=(0,a.useState)(b),O=w[0],D=w[1],x=[],T=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var M=k[f];null!=M&&M!==O&&h.some((function(e){return e.value===M}))&&D(M)}var E=function(e){var n=e.currentTarget,t=x.indexOf(n),r=h[t].value;r!==O&&(T(n),D(r),null!=f&&j(f,r))},P=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=x.indexOf(e.currentTarget)+1;t=x[r]||x[0];break;case"ArrowLeft":var a=x.indexOf(e.currentTarget)-1;t=x[a]||x[x.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},m)},h.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:function(e){return x.push(e)},onKeyDown:P,onFocus:E,onClick:E},o,{className:(0,l.Z)("tabs__item",i,null==o?void 0:o.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),s?(0,a.cloneElement)(y.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},y.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==O})}))))}function c(e){var n=(0,o.Z)();return a.createElement(s,(0,r.Z)({key:String(n)},e))}},15960:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),u=t(9877),l=t(58215),i=["components"],s={id:"configuration",sidebar_label:"Configuration"},c=void 0,d={unversionedId:"configuration",id:"version-0.11.3/configuration",title:"configuration",description:'<Tabs groupId="language"',source:"@site/versioned_docs/version-0.11.3/configuration.mdx",sourceDirName:".",slug:"/configuration",permalink:"/ModuleCheck/docs/0.11.3/configuration",editUrl:"https://github.com/rbusarow/ModuleCheck/versioned_docs/version-0.11.3/configuration.mdx",tags:[],version:"0.11.3",frontMatter:{id:"configuration",sidebar_label:"Configuration"},sidebar:"version-0.11.3/Docs",previous:{title:"Quick Start",permalink:"/ModuleCheck/docs/0.11.3/"},next:{title:"Suppressing Findings",permalink:"/ModuleCheck/docs/0.11.3/suppressing-findings"}},p=[],f={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(u.Z,{groupId:"language",defaultValue:"Kotlin",values:[{label:"Kotlin",value:"Kotlin"},{label:"Groovy",value:"Groovy"}],mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"Kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="root/build.gradle.kts"',title:'"root/build.gradle.kts"'},'plugins {\n  id("com.rickbusarow.module-check") version "0.11.3"\n}\n\nmoduleCheck {\n\n  deleteUnused = true // default is false\n\n  checks {\n    overShotDependency = true  // default is true\n    redundantDependency = false  // default is false\n    unusedDependency = true  // default is true\n    mustBeApi = true  // default is true\n    inheritedDependency = true  // default is true\n    sortDependencies = false  // default is false\n    sortPlugins = false  // default is false\n    unusedKapt = true  // default is true\n    anvilFactoryGeneration = true  // default is true\n    disableAndroidResources = false  // default is false\n    disableViewBinding = false  // default is false\n  }\n\n  // allow these modules to be declared as dependency anywhere,\n  // regardless of whether they\'re used\n  ignoreUnusedFinding = setOf(":test:core-jvm", ":test:core-android")\n\n  // do not check the dependencies of these modules.\n  // in this case, :app could declare any module it wants without issue\n  doNotCheck = setOf(":app")\n\n  additionalKaptMatchers = listOf(\n    modulecheck.api.KaptMatcher(\n      name = "MyProcessor",\n      processor = "my-project.codegen:processor",\n      annotationImports = listOf(\n        "myproject\\\\.\\\\*",\n        "myproject\\\\.MyInject",\n        "myproject\\\\.MyInject\\\\.Factory",\n        "myproject\\\\.MyInjectParam",\n        "myproject\\\\.MyInjectModule"\n      )\n    )\n  )\n\n  reports {\n    checkstyle {\n      enabled = true  // default is false\n      outputPath = "${project.buildDir}/reports/modulecheck/checkstyle.xml"\n    }\n    text {\n      enabled = true  // default is false\n      outputPath = "${project.buildDir}/reports/modulecheck/report.txt"\n    }\n  }\n}\n'))),(0,o.kt)(l.Z,{value:"Groovy",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="root/build.gradle"',title:'"root/build.gradle"'},"plugins {\n  id 'com.rickbusarow.module-check' version '0.11.3'\n}\n\nmoduleCheck {\n  deleteUnused = true // default is false\n\n  checks {\n    overShotDependency = true  // default is true\n    redundantDependency = false  // default is false\n    unusedDependency = true  // default is true\n    mustBeApi = true  // default is true\n    inheritedDependency = true  // default is true\n    sortDependencies = false  // default is false\n    sortPlugins = false  // default is false\n    unusedKapt = true  // default is true\n    anvilFactoryGeneration = true  // default is true\n    disableAndroidResources = false  // default is false\n    disableViewBinding = false  // default is false\n  }\n\n  // allow these modules to be declared as dependency anywhere,\n  // regardless of whether they're used\n  ignoreUnusedFinding = [':test:core-jvm', ':test:core-android']\n\n  // do not check the dependencies of these modules.\n  // in this case, :app could declare any module it wants without issue\n  doNotCheck = [':app']\n\n  additionalKaptMatchers = [\n    new modulecheck.api.KaptMatcher(\n      'MyProcessor',\n      'my-project.codegen:processor',\n       [\n        \"myproject\\\\.\\\\*\",\n        \"myproject\\\\.MyInject\",\n        \"myproject\\\\.MyInject\\\\.Factory\",\n        \"myproject\\\\.MyInjectParam\",\n        \"myproject\\\\.MyInjectModule\"\n      ]\n    )\n  ]\n\n  reports {\n    checkstyle {\n      it.enabled = true  // default is false\n      it.outputPath = \"${project.buildDir}/reports/modulecheck/checkstyle.xml\"\n    }\n    text {\n      it.enabled = true  // default is false\n      it.outputPath = \"${project.buildDir}/reports/modulecheck/report.txt\"\n    }\n  }\n\n}\n")))))}m.isMDXComponent=!0}}]);