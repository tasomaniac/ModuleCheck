"use strict";(self.webpackChunkmodulecheck=self.webpackChunkmodulecheck||[]).push([[5620],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(n),f=a,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=p;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},58215:function(e,t,n){var r=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(83117),a=n(67294),o=n(72389),l=n(24726),u=n(86010),i="tabItem_LplD";function s(e){var t,n,o,s=e.lazy,c=e.block,d=e.defaultValue,p=e.values,f=e.groupId,m=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=p?p:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.lx)(y,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===d?d:null!=(t=null!=d?d:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=h[0])?void 0:o.props.value;if(null!==v&&!y.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,l.UB)(),k=g.tabGroupChoices,j=g.setTabGroupChoices,w=(0,a.useState)(v),O=w[0],D=w[1],T=[],P=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var x=k[f];null!=x&&x!==O&&y.some((function(e){return e.value===x}))&&D(x)}var N=function(e){var t=e.currentTarget,n=T.indexOf(t),r=y[n].value;r!==O&&(P(t),D(r),null!=f&&j(f,r))},I=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=T.indexOf(e.currentTarget)+1;n=T[r]||T[0];break;case"ArrowLeft":var a=T.indexOf(e.currentTarget)-1;n=T[a]||T[T.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},m)},y.map((function(e){var t=e.value,n=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return T.push(e)},onKeyDown:I,onFocus:N,onClick:N},o,{className:(0,u.Z)("tabs__item",i,null==o?void 0:o.className,{"tabs__item--active":O===t})}),null!=n?n:t)}))),s?(0,a.cloneElement)(h.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function c(e){var t=(0,o.Z)();return a.createElement(s,(0,r.Z)({key:String(t)},e))}},36775:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),l=n(9877),u=n(58215),i=["components"],s={id:"configuration",sidebar_label:"Configuration"},c=void 0,d={unversionedId:"configuration",id:"version-0.11.4-SNAPSHOT/configuration",title:"configuration",description:'<Tabs groupId="language"',source:"@site/versioned_docs/version-0.11.4-SNAPSHOT/configuration.mdx",sourceDirName:".",slug:"/configuration",permalink:"/ModuleCheck/docs/configuration",editUrl:"https://github.com/rbusarow/ModuleCheck/versioned_docs/version-0.11.4-SNAPSHOT/configuration.mdx",tags:[],version:"0.11.4-SNAPSHOT",frontMatter:{id:"configuration",sidebar_label:"Configuration"},sidebar:"Docs",previous:{title:"Quick Start",permalink:"/ModuleCheck/docs/"},next:{title:"Suppressing Findings",permalink:"/ModuleCheck/docs/suppressing-findings"}},p=[],f={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{groupId:"language",defaultValue:"Kotlin",values:[{label:"Kotlin",value:"Kotlin"},{label:"Groovy",value:"Groovy"}],mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"Kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="root/build.gradle.kts"',title:'"root/build.gradle.kts"'},'plugins {\n  id("com.rickbusarow.module-check") version "0.11.4-SNAPSHOT"\n}\n\nmoduleCheck {\n\n  deleteUnused = true // default is false\n\n  checks {\n    overShotDependency = true  // default is true\n    redundantDependency = false  // default is false\n    unusedDependency = true  // default is true\n    mustBeApi = true  // default is true\n    inheritedDependency = true  // default is true\n    sortDependencies = false  // default is false\n    sortPlugins = false  // default is false\n    unusedKapt = true  // default is true\n    anvilFactoryGeneration = true  // default is true\n    disableAndroidResources = false  // default is false\n    disableViewBinding = false  // default is false\n    depths = false  // default is false\n  }\n\n  // allow these modules to be declared as dependency anywhere,\n  // regardless of whether they\'re used\n  ignoreUnusedFinding = setOf(":test:core-jvm", ":test:core-android")\n\n  // do not check the dependencies of these modules.\n  // in this case, :app could declare any module it wants without issue\n  doNotCheck = setOf(":app")\n\n  additionalKaptMatchers = listOf(\n    modulecheck.api.KaptMatcher(\n      name = "MyProcessor",\n      processor = "my-project.codegen:processor",\n      annotationImports = listOf(\n        "myproject\\\\.\\\\*",\n        "myproject\\\\.MyInject",\n        "myproject\\\\.MyInject\\\\.Factory",\n        "myproject\\\\.MyInjectParam",\n        "myproject\\\\.MyInjectModule"\n      )\n    )\n  )\n\n  reports {\n    checkstyle {\n      enabled = true  // default is false\n      outputPath = "${project.buildDir}/reports/modulecheck/checkstyle.xml"\n    }\n    depths {\n      enabled = true  // default is false\n      outputPath = "${project.buildDir}/reports/modulecheck/depths.txt"\n    }\n    graphs {\n      enabled = true  // default is false\n      // The root directory of all generated graphs.  If set, directories will be created\n      // for each module, mirroring the structure of the project.  If this property is null,\n      // graphs will be created in the `build/reports/modulecheck/graphs/` relative\n      // directory of each project.\n      outputDir = "${project.buildDir}/reports/modulecheck/graphs"\n    }\n    text {\n      enabled = true  // default is false\n      outputPath = "${project.buildDir}/reports/modulecheck/report.txt"\n    }\n  }\n}\n'))),(0,o.kt)(u.Z,{value:"Groovy",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="root/build.gradle"',title:'"root/build.gradle"'},'plugins {\n  id \'com.rickbusarow.module-check\' version \'0.11.4-SNAPSHOT\'\n}\n\nmoduleCheck {\n  deleteUnused = true // default is false\n\n  checks {\n    overShotDependency = true  // default is true\n    redundantDependency = false  // default is false\n    unusedDependency = true  // default is true\n    mustBeApi = true  // default is true\n    inheritedDependency = true  // default is true\n    sortDependencies = false  // default is false\n    sortPlugins = false  // default is false\n    unusedKapt = true  // default is true\n    anvilFactoryGeneration = true  // default is true\n    disableAndroidResources = false  // default is false\n    disableViewBinding = false  // default is false\n    depths = false  // default is false\n  }\n\n  // allow these modules to be declared as dependency anywhere,\n  // regardless of whether they\'re used\n  ignoreUnusedFinding = [\':test:core-jvm\', \':test:core-android\']\n\n  // do not check the dependencies of these modules.\n  // in this case, :app could declare any module it wants without issue\n  doNotCheck = [\':app\']\n\n  additionalKaptMatchers = [\n    new modulecheck.api.KaptMatcher(\n      \'MyProcessor\',\n      \'my-project.codegen:processor\',\n       [\n        "myproject\\\\.\\\\*",\n        "myproject\\\\.MyInject",\n        "myproject\\\\.MyInject\\\\.Factory",\n        "myproject\\\\.MyInjectParam",\n        "myproject\\\\.MyInjectModule"\n      ]\n    )\n  ]\n\n  reports {\n    checkstyle {\n      it.enabled = true  // default is false\n      it.outputPath = "${project.buildDir}/reports/modulecheck/checkstyle.xml"\n    }\n    depths {\n      it.enabled = true  // default is false\n      it.outputPath = "${project.buildDir}/reports/modulecheck/depths.txt"\n    }\n    graphs {\n      it.enabled = true  // default is false\n      // The root directory of all generated graphs.  If set, directories will be created\n      // for each module, mirroring the structure of the project.  If this property is null,\n      // graphs will be created in the `build/reports/modulecheck/graphs/` relative\n      // directory of each project.\n      it.outputDir = "${project.buildDir}/reports/modulecheck/graphs"\n    }\n    text {\n      it.enabled = true  // default is false\n      it.outputPath = "${project.buildDir}/reports/modulecheck/report.txt"\n    }\n  }\n\n}\n')))))}m.isMDXComponent=!0}}]);