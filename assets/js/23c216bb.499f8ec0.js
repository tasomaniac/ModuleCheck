"use strict";(self.webpackChunkmodulecheck=self.webpackChunkmodulecheck||[]).push([[6733],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return p}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=s(t),p=o,m=f["".concat(u,".").concat(p)]||f[p]||d[p]||i;return t?r.createElement(m,a(a({ref:n},l),{},{components:t})):r.createElement(m,a({ref:n},l))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},92615:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return f}});var r=t(83117),o=t(80102),i=(t(67294),t(3905)),a=["components"],c={id:"configuration",sidebar_label:"Configuration"},u=void 0,s={unversionedId:"configuration",id:"version-0.11.2/configuration",title:"configuration",description:"",source:"@site/versioned_docs/version-0.11.2/configuration.mdx",sourceDirName:".",slug:"/configuration",permalink:"/ModuleCheck/docs/0.11.2/configuration",editUrl:"https://github.com/rbusarow/ModuleCheck/versioned_docs/version-0.11.2/configuration.mdx",tags:[],version:"0.11.2",frontMatter:{id:"configuration",sidebar_label:"Configuration"},sidebar:"version-0.11.2/Docs",previous:{title:"Quick Start",permalink:"/ModuleCheck/docs/0.11.2/"},next:{title:"CI Workflow",permalink:"/ModuleCheck/docs/0.11.2/ci-workflow"}},l=[],d={toc:l};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'plugins {\n  id("com.rickbusarow.module-check") version "0.11.2"\n}\n\nmoduleCheck {\n\n  autoCorrect = true // default is true\n  deleteUnused = true // default is false\n\n  checks {\n    overshotDependency = true  // default is true\n    redundantDependency = false  // default is false\n    unusedDependency = true  // default is true\n    mustBeApi = true  // default is true\n    inheritedImplementation = true  // default is true\n    sortDependencies = false  // default is false\n    sortPlugins = false  // default is false\n    unusedKapt = true  // default is true\n    anvilFactoryGeneration = true  // default is true\n    disableAndroidResources = false  // default is false\n    disableViewBinding = false  // default is false\n  }\n\n  // allow these modules to be declared as dependency anywhere,\n  // regardless of whether they\'re used\n  alwaysIgnore.set(setOf(":test:core-jvm", ":test:core-android"))\n\n  // do not check the dependencies of these modules.\n  // in this case, :app could declare any module it wants without issue\n  ignoreAll.set(setOf(":app"))\n\n  additionalKaptMatchers.set(\n    listOf(\n      modulecheck.api.KaptMatcher(\n        name = "MyProcessor",\n        processor = "my-project.codegen:processor",\n        annotationImports = listOf(\n          "myproject\\\\.\\\\*",\n          "myproject\\\\.MyInject",\n          "myproject\\\\.MyInject\\\\.Factory",\n          "myproject\\\\.MyInjectParam",\n          "myproject\\\\.MyInjectModule"\n        )\n      )\n    )\n  )\n}\n')))}f.isMDXComponent=!0}}]);